---
- hosts: all
  become: true
  tasks:
    - name: Install acl
      shell: apt install acl

    # TODO: This should use vars
    - name: Rsync application files to the remote server
      synchronize:
        src: "/home/runner/work/packet-pigeon-publisher/packet-pigeon-publisher"
        dest: "{{ remote_www_root }}"
        rsync_opts:
          - "--no-motd"
          - "--exclude=.git,tests"

    - name: Set up .env file
      template:
        src: publisher-env.j2
        dest: "{{ remote_www_root }}/{{ app_root_dir }}/.env"

    - name: install nodejs prerequisites
      apt:
        name:
          - apt-transport-https
          - gcc
          - g++
          - make
        state: present
    - name: add nodejs apt key
      apt_key:
        url: https://deb.nodesource.com/gpgkey/nodesource.gpg.key
        state: present
    - name: add nodejs repository
      apt_repository:
        repo: deb https://deb.nodesource.com/node_14.x {{ ansible_lsb.codename }} main
        state: present
        update_cache: yes
    - name: install nodejs
      apt:
        name: nodejs
        state: present

    - name: Install PM2 Globally
      command: "npm install -g pm2"
      tags: ["npm:pm2:global"]

    - name: NPM install
      command: "npm ci"
      args:
        chdir: "{{ remote_www_root }}/{{ app_root_dir }}"
      tags: [ 'npm:ci' ]

    - name: Start PM2
      command: "pm2 start index.js"
      tags: ["pm2:start:index.js"]

    - name: Setup PM2 Systemd
      command: "pm2 startup systemd"

    - name: Set systemd to user
      command: "env PATH=$PATH:/usr/bin /usr/lib/node_modules/pm2/bin/pm2 startup systemd -u {{ remote_user }} --hp /home/{{ remote_user }}"
